PROGRAM -> HEADER DECLARATIONS BLOCK
HEADER -> program id(input,output) ;
Declarations -> CONST CONSTDEF CONSTDEFS | VAR VARDEC VARDECS | begin
CONSTDEFS -> VAR VARDECS | CONSTDEF CONSTDEFS | begin
CONSTDEF -> id=num;
VARDECS -> VARDEC VARDECS | begin
VARDEC -> id IDLIST;
IDLIST -> , id IDLIST | colon TYPE
TYPE -> bool | int | float | char
Block -> begin Statements end

Statements -> Statement StatementsPrime

StatementsPrime -> ; Statement StatementsPrime | Îµ

Statement -> id := Expression | Block | if Expression then Statement | repeat Statement until Expression | writeln ( SimpleExpression )



CONSTDEF -> id = num;
VARDEC -> IDLIST : TYPE IDLISTP
IDLISTP -> = E | colon